# Generated by Django 3.1.12 on 2024-12-16 10:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('multiplier', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('age', models.IntegerField()),
                ('weight', models.FloatField()),
                ('height', models.FloatField()),
                ('goal', models.CharField(choices=[('Weight gain', 'Weight gain'), ('Lose weight', 'Lose weight'), ('Maintain', 'Maintain')], max_length=100)),
                ('daily_caloric_intake', models.IntegerField(blank=True, null=True)),
                ('bmi', models.FloatField(blank=True, null=True)),
                ('bmi_status', models.CharField(blank=True, max_length=100, null=True)),
                ('activity', models.ForeignKey(blank=True, db_column='activity', null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitness.activitylevel')),
                ('user', models.ForeignKey(blank=True, db_column='auth_user', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('exercises', models.TextField()),
                ('difficulty', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], max_length=50)),
                ('duration_minutes', models.PositiveIntegerField()),
                ('target_goal', models.CharField(blank=True, choices=[('Weight Gain', 'Weight Gain'), ('Weight Loss', 'Weight Loss'), ('Weight Maintenance', 'Weight Maintenance')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('exercises_completed', models.TextField()),
                ('total_calories_burned', models.PositiveIntegerField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitness.customuser')),
                ('workout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitness.workout')),
            ],
        ),
        migrations.CreateModel(
            name='UserDashboardMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_sessions', models.PositiveIntegerField(blank=True, null=True)),
                ('total_calories_consumed', models.PositiveIntegerField(blank=True, null=True)),
                ('total_calories_burned', models.PositiveIntegerField(blank=True, null=True)),
                ('average_daily_calories', models.PositiveIntegerField(blank=True, null=True)),
                ('average_daily_exercises', models.PositiveIntegerField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='MealPlans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('calories_goal', models.IntegerField()),
                ('calories_consumed', models.IntegerField(editable=False)),
                ('meals', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='MealLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('meal_type', models.CharField(blank=True, choices=[('Breakfast', 'Breakfast'), ('Lunch', 'Lunch'), ('Dinner', 'Dinner'), ('Snack', 'Snack')], max_length=50, null=True)),
                ('calories_consumed', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('meal_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitness.mealplans')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.customuser')),
            ],
        ),
    ]
